type Category {
  id: ID!
  name: String!
  parentCategory: Category
  subCategories: [Category!]!
}

enum Currency {
  EUR
  GBP
  RUB
  USD
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar Date

type Mutation {
  createCategory(name: String!, parent: Int): Category!
}

type PageInfo {
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}

type Query {
  categories: [Category!]!
  ok: Boolean!
  transactions(after: ID, before: ID, first: Int, last: Int): QueryTransactionsConnection!
  transactions_statistic_per_months: [StatisticPerMonths!]!
  transactions_statistic_per_years: [StatisticPerYears!]!
}

type QueryTransactionsConnection {
  edges: [QueryTransactionsConnectionEdge]!
  pageInfo: PageInfo!
}

type QueryTransactionsConnectionEdge {
  cursor: String!
  node: Transaction!
}

enum Source {
  HSBC
  Monzo
  Raiffeisen
  Revolut
  Sberbank
  Tinkoff
}

type StatisticPerMonths {
  id: ID!
  income: Float!
  month: Int!
  outcome: Float!
  year: Int!
}

type StatisticPerYears {
  id: ID!
  income: Float!
  outcome: Float!
  year: Int!
}

type Transaction {
  amount: Float!
  currency: Currency!
  date: Date!
  description: String!
  id: ID!
  source: Source!
}