type Category {
  id: ID
  name: String
  parentCategory: Category
  subCategories: [Category!]
}

enum Currency {
  EUR
  GBP
  RUB
  USD
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar Date

type Error {
  message: String
}

type Mutation {
  createCategory(name: String!, parent: ID): MutationCreateCategoryResult
  deleteCategoriesForTransactions(
    transactions: [updateCategoriesForTransactionsInput!]!
  ): MutationDeleteCategoriesForTransactionsResult
  deleteCategory(id: ID!): MutationDeleteCategoryResult
  updateCategoriesForAllTransactions(
    category: String!
    filters: filterTransactionsInput!
  ): MutationUpdateCategoriesForAllTransactionsResult
  updateCategoriesForTransactions(
    transactions: [updateCategoriesForTransactionsInput!]!
  ): MutationUpdateCategoriesForTransactionsResult
  updateCategory(
    id: ID!
    name: String!
    parent: ID
  ): MutationUpdateCategoryResult
}

union MutationCreateCategoryResult = Error | MutationCreateCategorySuccess

type MutationCreateCategorySuccess {
  data: Category!
}

union MutationDeleteCategoriesForTransactionsResult =
    Error
  | MutationDeleteCategoriesForTransactionsSuccess

type MutationDeleteCategoriesForTransactionsSuccess {
  data: [Transaction!]!
}

union MutationDeleteCategoryResult = Error | MutationDeleteCategorySuccess

type MutationDeleteCategorySuccess {
  data: Category!
}

union MutationUpdateCategoriesForAllTransactionsResult =
    Error
  | MutationUpdateCategoriesForAllTransactionsSuccess

type MutationUpdateCategoriesForAllTransactionsSuccess {
  data: [Transaction!]!
}

union MutationUpdateCategoriesForTransactionsResult =
    Error
  | MutationUpdateCategoriesForTransactionsSuccess

type MutationUpdateCategoriesForTransactionsSuccess {
  data: [Transaction!]!
}

union MutationUpdateCategoryResult = Error | MutationUpdateCategorySuccess

type MutationUpdateCategorySuccess {
  data: Category!
}

type PageInfo {
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}

type Query {
  categories: [Category!]
  ok: Boolean
  transactions(
    after: ID
    before: ID
    filters: filterTransactionsInput
    first: Int
    last: Int
  ): QueryTransactionsConnection
  transactions_statistic_per_months: [StatisticPerMonths!]
  transactions_statistic_per_years: [StatisticPerYears!]
  transactions_total(filters: filterTransactionsInput): Int
}

type QueryTransactionsConnection {
  edges: [QueryTransactionsConnectionEdge]!
  pageInfo: PageInfo!
}

type QueryTransactionsConnectionEdge {
  cursor: String!
  node: Transaction!
}

enum Source {
  HSBC
  Monzo
  Raiffeisen
  Revolut
  Sberbank
  Tinkoff
}

type StatisticPerMonths {
  id: ID
  income: Float
  month: Int
  outcome: Float
  year: Int
}

type StatisticPerYears {
  id: ID
  income: Float
  outcome: Float
  year: Int
}

type Transaction {
  amount: Float
  categories: [TransactionsOnCategories!]
  completed: Boolean
  currency: Currency
  date: Date
  description: String
  id: ID
  source: Source
}

type TransactionsOnCategories {
  amount: Float
  category: Category
  transaction: Transaction
}

input filterTransactionsInput {
  categories: [String!]
  months: [String!]
  onlyIncome: Boolean = false
  onlyUncomplited: Boolean = false
  search: String
  sources: [String!]
}

input updateCategoriesForTransactionsInput {
  amount: Float!
  category: ID!
  transaction: ID!
}
